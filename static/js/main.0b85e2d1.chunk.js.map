{"version":3,"sources":["shared/models.ts","shared/styles.ts","shared/utils/utils.ts","assets/images/logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BVComponentName","FluentComponentName","KeyboardKey","Colors","Sizes","ZIndices","ComponentName","Theme","DefaultTheme","semanticColors","bodyBackground","bodyBg","bodyFrameBackground","getThemeClassNames","name","themes","componentThemeStyles","globalTheme","themeStyles","globalComponentTheme","components","overrideComponentTheme","Override_","styles","push","includes","unshift","forEach","theme","i","concatStyleSets","getThemeStyles","Object","keys","reduce","classNames","key","mergeStyles","BodyStyle","width","height","backgroundColor","color","bodyFont","AppThemeStyles","app","sidebar","sideBarWidth","zIndex","position","top","left","bottom","boxShadow","bgContent","content","paddingLeft","paddingTop","headerHeight","header","body","footer","sidebarHeader","display","alignItems","justifyContent","bgContentSecondary","fontWeight","FontWeights","semibold","fontSize","FontSizes","large","sidebarContent","menus","links","url","expandAriaLabel","collapseAriaLabel","target","isExpanded","App","baseGlobalTheme","baseComponentsThemeStyles","overideComponentsThemeStyles","initializeIcons","createTheme","getGlobalTheme","ThemeProvider","style","className","src","logo","alt","Nav","onLinkClick","ev","item","root","linkText","chevronIcon","ariaLabel","groups","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b85e2d1.chunk.js","sourcesContent":["// When Fluent already has the same component name, we can add `BV_` prefix to a component.\n// `Override_` prefix to override styles of a component. This styles will be applied as the last styles of a component. eg) Override_Button\nexport enum BVComponentName {\n  Override_ = 'Override_',\n  BV_List = 'BV_List',\n  App = 'App',\n}\n\n// List from https://developer.microsoft.com/en-us/fluentui#/controls/web.\n// Some child components are not in the list. https://github.com/microsoft/fluentui/tree/master/packages/react/src/components\nexport enum FluentComponentName {\n  ActivityItem = 'ActivityItem',\n  Announced = 'Announced',\n  Breadcrumb = 'Breadcrumb',\n  Button = 'Button',\n  Calendar = 'Calendar',\n  Callout = 'Callout',\n  Checkbox = 'Checkbox',\n  ChoiceGroup = 'ChoiceGroup',\n  Coachmark = 'Coachmark',\n  ColorPicker = 'ColorPicker',\n  ComboBox = 'ComboBox',\n  CommandBar = 'CommandBar',\n  ContextualMenu = 'ContextualMenu',\n  DatePicker = 'DatePicker',\n  DetailsList = 'DetailsList',\n  DetailsRow = 'DetailsRow',\n  Dialog = 'Dialog',\n  DialogContent = 'DialogContent',\n  DocumentCard = 'DocumentCard',\n  Dropdown = 'Dropdown',\n  Facepile = 'Facepile',\n  FocusTrapZone = 'FocusTrapZone',\n  FocusZone = 'FocusZone',\n  GroupedList = 'GroupedList',\n  HoverCard = 'HoverCard',\n  Icon = 'Icon',\n  Image = 'Image',\n  Keytips = 'Keytips',\n  Label = 'Label',\n  Layer = 'Layer',\n  Link = 'Link',\n  List = 'List',\n  MarqueeSelection = 'MarqueeSelection',\n  MessageBar = 'MessageBar',\n  Menu = 'Menu',\n  Modal = 'Modal',\n  Nav = 'Nav',\n  OverflowSet = 'OverflowSet',\n  Overlay = 'Overlay',\n  Panel = 'Panel',\n  PeoplePicker = 'PeoplePicker',\n  Persona = 'Persona',\n  Pickers = 'Pickers',\n  Pivot = 'Pivot',\n  PivotItem = 'PivotItem',\n  ProgressIndicator = 'ProgressIndicator',\n  Rating = 'Rating',\n  ResizeGroup = 'ResizeGroup',\n  ScrollablePane = 'ScrollablePane',\n  SearchBox = 'SearchBox',\n  Selection = 'Selection',\n  Separator = 'Separator',\n  Shimmer = 'Shimmer',\n  Slider = 'Slider',\n  SpinButton = 'SpinButton',\n  Spinner = 'Spinner',\n  Stack = 'Stack',\n  SwatchColorPicker = 'SwatchColorPicker',\n  TeachingBubble = 'TeachingBubble',\n  Text = 'Text',\n  TextField = 'TextField',\n  ThemeProvider = 'ThemeProvider',\n  Themes = 'Themes',\n  Toggle = 'Toggle',\n  Tooltip = 'Tooltip',\n  TooltipHost = 'TooltipHost',\n}\n\nexport const ComponentName = { ...BVComponentName, ...FluentComponentName };\n\nexport enum KeyboardKey {\n  Down = 'Down', // IE\n  ArrowDown = 'ArrowDown',\n  Up = 'Up', // IE\n  ArrowUp = 'ArrowUp',\n  Left = 'Left', // IE\n  ArrowLeft = 'ArrowLeft',\n  Right = 'Right', // IE\n  ArrowRight = 'ArrowRight',\n  Enter = 'Enter',\n  Esc = 'Esc', // IE\n  Escape = 'Escape',\n  Tab = 'Tab',\n}\n\nexport interface IComponent<S> {\n  themes?: string[];\n  themeStyles?: { [key: string]: S };\n  dataAttributes?: { [key: string]: string };\n}\n","import { ICalloutContentStyles, ITooltipHostStyles, PartialTheme } from '@fluentui/react';\n\n// *************** units *****************\nexport enum Colors {\n  primary = '#857dcc',\n  secondary = '#a7a7a7',\n  success = '#519668',\n  info = '#5299e0',\n  warning = '#d5a439',\n  danger = '#c77171',\n  light = 'rgba(255, 255, 255, 0.1)',\n  dark = 'rgba(0, 0, 21, 0.1)',\n  primaryStart = '#4638c2',\n  primaryStop = '#2d2587',\n  secondaryStart = '#d1d2d3',\n  secondaryStop = 'white',\n  successStart = '#45a164',\n  successStop = '#2e8c47',\n  infoStart = '#4799eb',\n  infoStop = '#4280b4',\n  warningStart = '#e1a82d',\n  warningStop = '#dd9124',\n  dangerStart = '#d16767',\n  dangerstop = '#c14f4f',\n  lightStart = '#e8e8e8',\n  lightstop = 'white',\n  darkStart = '#4c4f54',\n  darkStop = '#292a2b',\n  bodyBg = '#181924',\n  bodyFont = 'rgba(255, 255, 255, 0.87)',\n  elevationBase = '0,0,0',\n  highEmphasis = 'rgba(255, 255, 255, 0.87)',\n  mediumEmphasis = 'rgba(255, 255, 255, 0.6)',\n  disabled = 'rgba(255, 255, 255, 0.38)',\n  border = 'rgba(255, 255, 255, 0.075)',\n  link = '#948dd2',\n  linkHover = '#a9a4db',\n  bgPrimary = '#857dcc',\n  bgSecondary = '#a7a7a7',\n  bgSuccess = '#519668',\n  bgInfo = '#5299e0',\n  bgWarning = '#d5a439',\n  bgDanger = '#c77171',\n  bgLight = 'rgba(255, 255, 255, 0.1)',\n  bgDark = 'rgba(0, 0, 21, 0.1)',\n  bgContent = `#2a2b36`,\n  bgContentSecondary = 'rgba(0, 0, 21, 0.2)',\n  textPrimary = '#857dcc',\n  textSecondary = '#a7a7a7',\n  textSuccess = '#519668',\n  textInfo = '#5299e0',\n  textWarning = '#d5a439',\n  textDanger = '#c77171',\n  textLight = 'rgba(255, 255, 255, 0.1)',\n  textDark = 'rgba(0, 0, 21, 0.1)',\n  boxShadow = `0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.12),0 1px 5px 0 rgba(0,0,0,.20)`,\n}\nexport enum Sizes {\n  listHeight = 50,\n  borderRadius = 4,\n  sideBarWidth = 256,\n  headerHeight = 64,\n}\n\nexport enum ZIndices {\n  sidebar = 999,\n}\n\n// ****************** fluent component themes ****************\nexport const TooltipThemeStyles: { [key: string]: Partial<ITooltipHostStyles> } = {\n  default: {\n    root: {\n      cursor: 'pointer',\n    },\n  },\n};\n\n// Combobox and Dropdown Callout styles need to be changed by IComboBoxStyles and IDropdownStyles. The default theme doesn't work\nexport const CalloutThemeStyles: { [key: string]: Partial<ICalloutContentStyles> } = {\n  default: {\n    root: {},\n  },\n};\n\n/* ************* Global Theme ****************\nUI element can have multiple themes like <Button themes={[Theme.userMenu, Theme.dark]} />\n*/\nexport enum Theme {\n  default = 'default',\n  app = 'app',\n}\n\nexport const DefaultTheme: PartialTheme = {\n  semanticColors: {\n    bodyBackground: Colors.bodyBg,\n    bodyFrameBackground: Colors.bodyBg,\n  },\n};\n\n// This needs to be applied colors for Dark Theme. Added a black for testing Dark Theme\nexport const DarkTheme: PartialTheme = {};\n","import { concatStyleSets, IStyleSet, mergeStyles } from '@fluentui/merge-styles';\nimport { Theme, createTheme, ComponentsStyles, initializeIcons, PartialTheme } from '@fluentui/react';\nimport { BVComponentName } from '../models';\n/**\n *\n * @param name Component name to get the styles of a component from Global theme\n * @param themes Theme names to get the styles from componentThemeStyles\n * @param componentThemeStyles styles of Themes\n * @param globalTheme The global theme from ThemeProvider\n * @returns\n */\nexport const getThemeStyles = <S>(name: string, themes: string[] = ['default'], componentThemeStyles: ({ [key: string]: IStyleSet<S> } | undefined)[], globalTheme: Theme): IStyleSet<S> => {\n  const globalComponentTheme = globalTheme.components ? globalTheme.components[name] : null;\n  const overrideComponentTheme = globalTheme.components ? globalTheme.components[BVComponentName.Override_ + name] : null;\n  const themeStyles: IStyleSet<S>[] = [];\n  // theme order: global < component < override styles.\n  if (globalComponentTheme && globalComponentTheme.styles) {\n    themeStyles.push(globalComponentTheme.styles);\n  }\n  // Dark or White labeling\n  if (overrideComponentTheme && overrideComponentTheme.styles) {\n    componentThemeStyles.push(overrideComponentTheme.styles as { [key: string]: IStyleSet<S> });\n  }\n  // an addtional custom default styles can be added.\n  if (!themes.includes('default')) {\n    themes.unshift('default');\n  }\n  themes.forEach((theme) => {\n    componentThemeStyles.forEach((styles, i) => {\n      if (styles && styles[theme]) {\n        // the first default is provided by Global Theme.\n        if (i !== 0 || (i === 0 && theme !== 'default')) {\n          themeStyles.push(styles[theme]);\n        }\n      }\n    });\n  });\n  return concatStyleSets(...themeStyles) as IStyleSet<S>;\n};\n\n/**\n * @param name\n * @param themes\n * @param componentThemeStyles\n */\nexport const getThemeClassNames = <S, C>(name: string, themes: string[], componentThemeStyles: ({ [key: string]: IStyleSet<S> } | undefined)[], globalTheme: Theme): C => {\n  const themeStyles = getThemeStyles(name, themes, componentThemeStyles, globalTheme) as { [key: string]: any };\n  return Object.keys(themeStyles).reduce((classNames, key) => {\n    classNames[key] = `${name}-${key} ${mergeStyles(themeStyles[key])}`;\n    return classNames;\n  }, {} as { [key: string]: any }) as C;\n};\n\n/**\n * Generate Global Theme for Fluent Theme Provider\n * @param baseGlobalTheme base global theme{ defaultFontStyle: {...}, semanticColors: {...}}\n * @param baseComponentsThemeStyles default global component theme\n * @param overideComponentsThemeStyles theme styles of components to override components theme styles\n */\nexport const getGlobalTheme = (baseGlobalTheme: PartialTheme, baseComponentsThemeStyles: { [key: string]: any }, overideComponentsThemeStyles?: { [key: string]: any }): Theme => {\n  const components: ComponentsStyles = {};\n  Object.keys(baseComponentsThemeStyles).forEach((key) => {\n    components[key] = { styles: baseComponentsThemeStyles[key] };\n  });\n  if (overideComponentsThemeStyles) {\n    Object.keys(overideComponentsThemeStyles).forEach((key) => {\n      components[BVComponentName.Override_ + key] = { styles: overideComponentsThemeStyles[key] };\n    });\n  }\n  initializeIcons();\n  return createTheme({\n    ...baseGlobalTheme,\n    components,\n  });\n};\n\n/**\n * return components default styles\n * @returns\n */\nexport const getComponentsDefaultStyles = () => {\n  return {\n    // Fluent Components\n    // H2O.ai components. They can have `BV_` prefix if Fluent has the same component name\n  };\n};\n","export default __webpack_public_path__ + \"static/media/logo.7d6cb642.svg\";","import { IStyle, IStyleSet, ThemeProvider, FontWeights, FontSizes, INavLinkGroup, INavLink, Nav } from '@fluentui/react';\nimport { ComponentName } from './shared/models';\nimport { Colors, DefaultTheme, Sizes, Theme, ZIndices } from './shared/styles';\nimport { getComponentsDefaultStyles, getGlobalTheme, getThemeClassNames } from './shared/utils/utils';\nimport logo from './assets/images/logo.svg';\ninterface IAppClassNames {\n  sidebar: string;\n  sidebarContent: string;\n  content: string;\n  header: string;\n  body: string;\n  footer: string;\n  sidebarHeader: string;\n}\n\ninterface IAppStyles {\n  sidebar: IStyle;\n  content: IStyle;\n  header: IStyle;\n  body: IStyle;\n  footer: IStyle;\n  sidebarHeader: IStyle;\n  sidebarContent: IStyle;\n}\n\nconst BodyStyle = {\n  width: '100%',\n  height: '100vh',\n  backgroundColor: Colors.bodyBg,\n  color: Colors.bodyFont,\n};\n\nconst AppThemeStyles: { [key: string]: IStyleSet<IAppStyles> } = {\n  app: {\n    sidebar: {\n      width: Sizes.sideBarWidth,\n      zIndex: ZIndices.sidebar,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      boxShadow: Colors.boxShadow,\n      backgroundColor: Colors.bgContent,\n    },\n    content: {\n      position: 'relative',\n      paddingLeft: Sizes.sideBarWidth,\n      paddingTop: Sizes.headerHeight,\n    },\n    header: {\n      height: Sizes.headerHeight,\n      backgroundColor: Colors.bgContent,\n      boxShadow: Colors.boxShadow,\n      position: 'fixed',\n      width: '100%',\n      top: 0,\n    },\n    body: {},\n    footer: {},\n    sidebarHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: Sizes.headerHeight,\n      backgroundColor: Colors.bgContentSecondary,\n      fontWeight: FontWeights.semibold,\n      fontSize: FontSizes.large,\n    },\n    sidebarContent: {},\n  },\n};\n\nconst menus: INavLinkGroup[] = [\n  {\n    links: [\n      {\n        name: 'Boards',\n        url: '',\n        expandAriaLabel: 'Expand Boards section',\n        collapseAriaLabel: 'Collapse Boards section',\n        links: [\n          {\n            name: 'My Boards',\n            url: '',\n            key: 'MyBoards',\n            target: '_blank',\n          },\n          {\n            name: 'Boards',\n            url: '',\n            key: 'Boards',\n            target: '_blank',\n          },\n        ],\n        isExpanded: true,\n      },\n      {\n        name: 'Apps',\n        url: '',\n        expandAriaLabel: 'Expand Apps section',\n        collapseAriaLabel: 'Collapse Apps section',\n        links: [\n          {\n            name: 'My Apps',\n            url: '',\n            key: 'MyApps',\n            target: '_blank',\n          },\n          {\n            name: 'Apps',\n            url: '',\n            key: 'Apps',\n            target: '_blank',\n          },\n          {\n            name: 'Widgets',\n            url: '',\n            key: 'Widgets',\n            target: '_blank',\n          },\n        ],\n        isExpanded: true,\n      },\n    ],\n  },\n];\n\nfunction App() {\n  const onMenuClick = (ev?: React.MouseEvent<HTMLElement>, item?: INavLink) => {};\n  const globalTheme = getGlobalTheme(DefaultTheme, getComponentsDefaultStyles());\n  const classNames = getThemeClassNames<IAppStyles, IAppClassNames>(ComponentName.App, [Theme.app], [AppThemeStyles], globalTheme);\n  return (\n    <ThemeProvider theme={globalTheme} style={BodyStyle}>\n      <div className={classNames.sidebar}>\n        <div className={classNames.sidebarHeader}>\n          <img src={logo} alt=\"BoardVerse logo\" height=\"30px\" />\n          &nbsp;BoardVerse\n        </div>\n        <div className={classNames.sidebarContent}>\n          <Nav\n            onLinkClick={onMenuClick}\n            styles={{\n              root: {\n                width: '100%',\n              },\n              linkText: {\n                color: Colors.bodyFont,\n              },\n              chevronIcon: {\n                color: Colors.bodyFont,\n              },\n            }}\n            ariaLabel=\"Nav basic example\"\n            groups={menus}\n          />\n        </div>\n      </div>\n      <div className={classNames.content}>\n        <div className={classNames.header}>header</div>\n        <div className={classNames.body}>body</div>\n        <div className={classNames.footer}>footer</div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StrictMode } from 'react';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}